DROP DATABASE IF EXISTS reviews;
CREATE DATABASE reviews;

\c reviews;

DROP TABLE IF EXISTS reviews_photos CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS characteristics CASCADE;
DROP TABLE IF EXISTS characteristics_reviews CASCADE;
DROP TABLE IF EXISTS meta CASCADE;
DROP TABLE IF EXISTS characteristics_prod_sums CASCADE;

-- will be originally loaded from reviews csv grabbing only product IDs
-- Will act as product_id table
-- will have one product ID in each one
-- product_id derived from reviews product id
-- recommended (not) count derived from count of T/F recommend in reviews
-- ratings counts derived from rough count of ratings
CREATE TABLE meta (
  product_id INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY, -- based on reviews table
  total_reviews INT DEFAULT 0, -- total reviews for that product
  recommended INT DEFAULT 0,
  not_recommended INT DEFAULT 0,
  count_1 INT DEFAULT 0,
  count_2 INT DEFAULT 0,
  count_3 INT DEFAULT 0,
  count_4 INT DEFAULT 0,
  count_5 INT DEFAULT 0
);


CREATE TABLE reviews (
  review_id INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  product_id INT references meta(product_id), -- will be a secondary index
  rating SMALLINT CHECK (rating > 0) CHECK (rating < 6),
  summary VARCHAR(100),
  recommend BOOLEAN, -- may need to index by this
  response VARCHAR(400),
  reported BOOLEAN,
  body VARCHAR(400),
  -- date_added DATE GENERATED BY DEFAULT CURRENT_TIMESTAMP(3), -- may need to index by this
  date_added BIGINT,
  reviewer_name VARCHAR(40),
  reviewer_email VARCHAR(60),
  helpfulness INT DEFAULT 0 -- may need to index by this
);


-- will load 1 csv file
CREATE TABLE reviews_photos (
  id INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  photo_url TEXT,
  review_id INT references reviews(review_id) -- may need to index by this
);

-- will load half of characteristics.csv
-- will load chararacteristics.csv
-- during load, give each new char_name a new row, dont repeat
CREATE TABLE characteristics (
  id INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  char_name VARCHAR(15)
);

-- Has 1 csv file
-- will act as join table for char_id and review_id
-- holds individual characteristic ratings
CREATE TABLE characteristics_reviews (
  id INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  characteristic_id INT references characteristics(id),
  review_id INT references reviews(review_id),
  char_value SMALLINT CHECK (char_value > 0) CHECK (char_value < 6) -- range 0 to 5
);

-- will load half of characteristics.csv
-- value will be derived from count in characteristics reviews
-- will be join table for meta product_id and char_id
CREATE TABLE characteristics_prod_sums (
  id INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  product_id INT references meta(product_id),
  characteristic_id INT references characteristics(id),
  product_char_sum INT DEFAULT 0 -- sum of all values for that characteristic for a particular product
);
