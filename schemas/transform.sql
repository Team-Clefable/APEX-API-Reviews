-- use database
\c reviews

-- drop and create tablse if not exists
DROP TABLE IF EXISTS meta CASCADE;
DROP TABLE IF EXISTS characteristics CASCADE;
DROP TABLE IF EXISTS characteristics_reviews CASCADE;
DROP TABLE IF EXISTS characteristics_prod_sums CASCADE;

-- insert queries from reviews table to fill
-- recommended (not) count derived from count of T/F recommend in reviews
-- ratings counts derived from rough count of ratings
CREATE TABLE meta (
  product_id INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY, -- based on reviews table
  total_reviews INT DEFAULT 0, -- total reviews for that product
  recommended INT DEFAULT 0,
  not_recommended INT DEFAULT 0,
  count_1 INT DEFAULT 0,
  count_2 INT DEFAULT 0,
  count_3 INT DEFAULT 0,
  count_4 INT DEFAULT 0,
  count_5 INT DEFAULT 0
);

-- load from temp_char insert queries
-- during load, give each new char_name a new row, dont repeat
CREATE TABLE characteristics (
  id INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  char_name VARCHAR(15) UNIQUE
);

-- THIS IS ONE OF YOUR BASIC TABLES, JUST NEED TO MAKE AFTER CHARACTERISTICS FOR F KEY
-- Has 1 csv file
-- will act as join table for char_id and review_id
-- holds individual characteristic ratings
CREATE TABLE characteristics_reviews (
  id INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  characteristic_id INT references characteristics(id),
  review_id INT references reviews(review_id),
  char_value SMALLINT CHECK (char_value > 0) CHECK (char_value < 6) -- range 0 to 5
);

-- load from temp_char insert queries
-- value will be derived from count in characteristics reviews
-- will be join table for meta product_id and char_id
CREATE TABLE characteristics_prod_sums (
  id INT GENERATED BY DEFAULT AS IDENTITY UNIQUE PRIMARY KEY,
  product_id INT references meta(product_id),
  characteristic_id INT references characteristics(id),
  product_char_sum INT DEFAULT 0 -- sum of all values for that characteristic for a particular product
);

-- query to load meta product_ids
-- INSERT INTO meta (product_id) SELECT product_id FROM reviews ON CONFLICT (product_id) DO NOTHING;

-- psql query to load characteristics
-- INSERT INTO characteristics (id, char_name) SELECT id, characteristic_name FROM temp_characteristics ON CONFLICT (char_name) DO NOTHING;

-- psql query to load charactereistics_prod_sums
-- INSERT INTO charactereistics_prod_sums (product_id, characteristic_id) SELECT

-- ALTER TABLES